#include <AccelStepper.h>
#include <ezButton.h>


// STEP/DIR pins for each stepper
#define stepPin1 2 //LA_y
#define dirPin1 3
#define stepPin2 4 //LA_y
#define dirPin2 5
#define stepPin3 6 //LA_y
#define dirPin3 7
#define stepPin4 8 //LA_y
#define dirPin4 9
#define stepPin5 10 //LA_y
#define dirPin5 11
#define stepPin6 12 //LA_y
#define dirPin6 13
#define stepPin7 14 //LA_y
#define dirPin7 15
#define stepPin8 16 //LA_y
#define dirPin8 17

// Limit switches
ezButton limitSwitch1(22); 
ezButton limitSwitch2(23); 
ezButton limitSwitch3(24); 
ezButton limitSwitch4(25); 
ezButton limitSwitch5(26); 
ezButton limitSwitch6(27);
ezButton limitSwitch7(28); 
ezButton limitSwitch8(29); 
ezButton limitSwitch9(30); 
ezButton limitSwitch10(31); 
// Stepper objects
AccelStepper stepper1(AccelStepper::DRIVER, stepPin1, dirPin1);
AccelStepper stepper2(AccelStepper::DRIVER, stepPin2, dirPin2);
AccelStepper stepper3(AccelStepper::DRIVER, stepPin3, dirPin3);
AccelStepper stepper4(AccelStepper::DRIVER, stepPin4, dirPin4);
AccelStepper stepper5(AccelStepper::DRIVER, stepPin5, dirPin5);
AccelStepper stepper6(AccelStepper::DRIVER, stepPin6, dirPin6);
AccelStepper stepper7(AccelStepper::DRIVER, stepPin7, dirPin7);
AccelStepper stepper8(AccelStepper::DRIVER, stepPin8, dirPin8);
bool homingDone = false;
bool homingStarted=false;
bool motor1home = false;
bool motor2home = false;
bool motor3home = false;
bool motor4home = false;
bool motor5home = false;
bool motor6home = false;
bool motor7home = false;
bool motor8home = false;
// Position limits

void setup() {
  Serial.begin(9600);
  Serial.setTimeout(100);
  // Initialize limit switch debounce
  limitSwitch1.setDebounceTime(50);
  limitSwitch2.setDebounceTime(50);
  limitSwitch3.setDebounceTime(50);
  limitSwitch4.setDebounceTime(50);
  limitSwitch5.setDebounceTime(50);
  limitSwitch6.setDebounceTime(50);
  limitSwitch7.setDebounceTime(50);
  limitSwitch8.setDebounceTime(50);
  limitSwitch9.setDebounceTime(50);
  limitSwitch10.setDebounceTime(50);
  // seting pulldown for limit switch 
  
  // Configure steppers
  stepper1.setMaxSpeed(200); stepper1.setAcceleration(3000);
  stepper2.setMaxSpeed(200); stepper2.setAcceleration(3000);
  stepper3.setMaxSpeed(200); stepper3.setAcceleration(3000);
  stepper4.setMaxSpeed(200); stepper4.setAcceleration(3000);
  stepper5.setMaxSpeed(200); stepper5.setAcceleration(3000);
  stepper6.setMaxSpeed(200); stepper6.setAcceleration(3000);
  stepper7.setMaxSpeed(200); stepper7.setAcceleration(3000);
  stepper8.setMaxSpeed(400); stepper8.setAcceleration(3000);
  //stepper1.setSpeed(200)
  // declare dicrection
  stepper1.setPinsInverted(true, false);  
  stepper2.setPinsInverted(false, false);  
  stepper3.setPinsInverted(false, false);  
  stepper4.setPinsInverted(true, false);  
  stepper5.setPinsInverted(true, false);  
  stepper6.setPinsInverted(false, false);  
  stepper7.setPinsInverted(false, false);  
  stepper8.setPinsInverted(false, false);  
}

void loop() {
  if (!homingDone) {
    if (!homingStarted) {
      Serial.println("Starting homing...");
      stepper1.moveTo(-10000);
      stepper2.moveTo(-10000);
      stepper3.moveTo(-10000);
      stepper4.moveTo(-10000);
      stepper5.moveTo(-10000);
      stepper6.moveTo(-10000);
      stepper7.moveTo(-10000);
      stepper8.moveTo(-10000);
      homingStarted = true;
    }

    limitSwitch1.loop();
    stepper1.run();  // <-- keep it moving!
    limitSwitch2.loop();
    stepper2.run();  // <-- keep it moving!
    limitSwitch3.loop();
    stepper3.run();  // <-- keep it moving!
    limitSwitch4.loop();
    stepper4.run();  // <-- keep it moving!
    limitSwitch5.loop();
    stepper5.run();  // <-- keep it moving!
    limitSwitch6.loop();
    stepper6.run();  // <-- keep it moving!
    limitSwitch7.loop();
    stepper7.run();  // <-- keep it moving!
    limitSwitch8.loop();
    stepper8.run();  // <-- keep it moving!
    limitSwitch9.loop();
    limitSwitch10.loop();
    if (limitSwitch1.getState() == HIGH) {
      stepper1.stop();
      while (stepper1.isRunning()) {
        stepper1.run();  // make sure it fully stops
      }
      motor1home=true;
      stepper1.setCurrentPosition(0);  // reset position to zero
      //Serial.println("Motor 1 homed.");
    }
    if (limitSwitch2.getState() == HIGH) {
      stepper2.stop();
      while (stepper2.isRunning()) {
        stepper2.run();  // make sure it fully stops
      }
      motor2home=true;
      stepper2.setCurrentPosition(0);  // reset position to zero
      //Serial.println("Motor 2 homed.");
    }
      if (limitSwitch3.getState() == HIGH) {
      stepper7.stop();
      while (stepper7.isRunning()) {
        stepper7.run();  // make sure it fully stops
      }
      motor7home=true;
      stepper7.setCurrentPosition(0);  // reset position to zero
      //Serial.println("Motor 7 homed.");
    }
      if (limitSwitch4.getState() == HIGH) {
      stepper8.stop();
      while (stepper8.isRunning()) {
        stepper8.run();  // make sure it fully stops
      }
      motor8home=true;
      stepper8.setCurrentPosition(0);  // reset position to zero
     // Serial.println("Motor 8 homed.");
    }
      if (limitSwitch7.getState() == HIGH) {
      stepper3.stop();
      while (stepper3.isRunning()) {
        stepper3.run();  // make sure it fully stops
      }
      motor3home=true;
      stepper3.setCurrentPosition(0);  // reset position to zero
      //Serial.println("Motor 3 homed.");
    }
      if (limitSwitch8.getState() == HIGH) {
      stepper5.stop();
      while (stepper5.isRunning()) {
        stepper5.run();  // make sure it fully stops
      }
      motor5home=true;
      stepper5.setCurrentPosition(0);  // reset position to zero
      //Serial.println("Motor 5 homed.");
    }
    if (limitSwitch9.getState() == HIGH) {
      stepper4.stop();
      while (stepper4.isRunning()) {
        stepper4.run();  // make sure it fully stops
      }
      motor4home=true;
      stepper4.setCurrentPosition(0);  // reset position to zero
      //Serial.println("Motor 4 homed.");
    }
    if (limitSwitch10.getState() == HIGH) {
      stepper6.stop();
      while (stepper6.isRunning()) {
        stepper6.run();  // make sure it fully stops
      }
      motor6home=true;
      stepper6.setCurrentPosition(0);  // reset position to zero
      //Serial.println("Motor 6 homed.");
    }
    if (motor1home&&motor2home&&motor3home&&motor4home&&motor5home&&motor6home&&motor7home&&motor8home)
    {
      homingDone=true;
      Serial.println("all motor homing done.");
    }
  }
}
